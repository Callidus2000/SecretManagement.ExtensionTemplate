name: ReleaseOnPRClose
on:
  pull_request:
    types: [closed]
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      ReleaseHeader:
        description: The header to be added to the release.
        required: false
jobs:
  ReleaseOnPRClose:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.15
      with:
        versionSpec: '5.x'
    - name: Get ModuleName
      run: |
        $moduleName=Get-ChildItem -Directory |Where-Object {Test-Path (Join-Path $_ "$($_.name).psd1")}|Select-Object -ExpandProperty Name
        echo "MODULENAME=$moduleName" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
        $psdModuleVersion=Import-PowerShellDataFile (Join-Path $moduleName "$moduleName.psd1")|Select-Object -ExpandProperty ModuleVersion
        echo "PSD_MODULEVERSION=$psdModuleVersion" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      shell: pwsh
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.15
      with:
        additionalArguments: /overrideconfig next-version=${{env.PSD_MODULEVERSION}}
    - name: Print Environment
      uses: managedkaos/print-env@master
    - name: Query needed modules
      id: getReqModules
      shell: pwsh
      run: |
          "RequiredModules=$((Import-PowerShellDataFile "./$($env:MODULENAME)/$($env:MODULENAME).psd1").RequiredModules.modulename -join ',')" >> $env:GITHUB_OUTPUT
          # (Import-PowerShellDataFile ./SecretManagement.ExtensionTemplate/SecretManagement.ExtensionTemplate.psd1).RequiredModules.modulename -join ','
    - name: Install and cache PowerShell modules
      id: psmodulecache
      uses: potatoqualitee/psmodulecache@v5.2
      with:
        modules-to-cache: ${{ steps.getReqModules.outputs.RequiredModules }},ChangelogManagement,platyPS
    - name: Validate
      run: .\build\vsts-validate.ps1
    - name: Update Changelog
      id: changelog
      uses: natescherer/changelog-management-action@v1
      with:
        mode: release
        releaseVersion: ${{ steps.gitversion.outputs.SemVer }}
    - name: Update PowerShell Metadata
      run: |
        $updateParam=@{
          path= (Join-Path (Get-Location).path "${{ env.MODULENAME }}" "${{ env.MODULENAME }}.psd1")
          moduleVersion="${{ steps.gitversion.outputs.MajorMinorPatch }}"
          copyright="(c) $(Get-Date -Format 'yyyy') Sascha Spiekermann"
          releaseNotes= "${{ steps.changelog.outputs.releasenotes }}"
          # functionsToExportPath: src\public
          description= "${{ steps.metadata.outputs.description }}"
        }
        @($updateParam.keys) | Foreach-Object { 
          if (-not $updateParam[$_]) { $updateParam.Remove($_) } 
        }
        Update-ModuleManifest @updateParam
    - name: Push SemVer Tag
      uses: rickstaa/action-create-tag@v1
      with:
        tag: v${{ steps.gitversion.outputs.SemVer }}
    - name: Commit Changes to Repo (Source Branch of development)
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Release v${{ steps.gitversion.outputs.SemVer }}
        file_pattern: ":!test\\* :!test/*"
        # skip_checkout: true
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: v${{ steps.gitversion.outputs.SemVer }}
        tag_name: v${{ steps.gitversion.outputs.SemVer }}
        body: |
          # Release v${{ steps.gitversion.outputs.SemVer }}
          ${{ github.event.inputs.ReleaseHeader}}

          ## Changes
          ${{ steps.changelog.outputs.releasenotes }}
    - name: Perform Merge development to master (${{ github.head_ref }}>${{ github.base_ref }})
      uses: devmasx/merge-branch@master
      with:
        type: now
        from_branch: ${{ github.head_ref }}
        # target_branch: master
        target_branch: ${{ github.base_ref }}
        github_token: ${{ github.token }}
    - name: Build and publish
      env:
        APIKEY: ${{ secrets.ApiKey }}
      if: ${{ env.APIKEY != '' }}
      run: .\build\vsts-build.ps1 -ApiKey $env:APIKEY

    # - name: Merge master back to dev
    #   run: |
    #       git fetch --unshallow
    #       git checkout ${{ github.head_ref	 }}
    #       git pull
    #       git checkout ${{ github.base_ref }}
    #       git pull
    #       git merge --no-ff ${{ github.head_ref	 }} -m "Auto-merge ${{ github.base_ref }} to ${{ github.head_ref	 }}"
    #       git push
    # - name: Setup tmate session
    #   if: ${{ failure() || (github.event_name == 'workflow_dispatch' && inputs.debug_enabled ) }}
    #   uses: mxschmitt/action-tmate@v3
    # - name: Build
    #   run: .\build\vsts-build.ps1 -ApiKey $env:APIKEY -Version ${{ steps.gitversion.outputs.SemVer }}
    #   shell: pwsh
    #   env:
    #     APIKEY: ${{ secrets.ApiKey }}
